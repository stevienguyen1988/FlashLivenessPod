program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "3402.3.2"}, {"coremlc-version", "3402.4.1"}, {"coremltools-component-torch", "2.3.1+cu121"}, {"coremltools-source-dialect", "TorchScript"}, {"coremltools-version", "7.2"}})]
{
    func main<ios15>(tensor<fp32, [1, 3, 224, 224]> input) {
            tensor<fp32, []> input__scaled___y_0 = const()[name = tensor<string, []>("input__scaled___y_0"), val = tensor<fp32, []>(0x1.010102p-8)];
            tensor<fp32, [1, 3, 224, 224]> input__scaled__ = mul(x = input, y = input__scaled___y_0)[name = tensor<string, []>("input__scaled__")];
            tensor<fp32, [1, 3, 1, 1]> input__biased___y_0 = const()[name = tensor<string, []>("input__biased___y_0"), val = tensor<fp32, [1, 3, 1, 1]>([[[[-0x1.f0a3d8p-2]], [[-0x1.d2f1aap-2]], [[-0x1.9fbe76p-2]]]])];
            tensor<fp32, [1, 3, 224, 224]> input__biased__ = add(x = input__scaled__, y = input__biased___y_0)[name = tensor<string, []>("input__biased__")];
            tensor<int32, []> var_4 = const()[name = tensor<string, []>("op_4"), val = tensor<int32, []>(576)];
            tensor<int32, []> var_5 = const()[name = tensor<string, []>("op_5"), val = tensor<int32, []>(288)];
            tensor<int32, []> var_6 = const()[name = tensor<string, []>("op_6"), val = tensor<int32, []>(144)];
            tensor<int32, []> var_7 = const()[name = tensor<string, []>("op_7"), val = tensor<int32, []>(120)];
            tensor<int32, []> var_8 = const()[name = tensor<string, []>("op_8"), val = tensor<int32, []>(240)];
            tensor<int32, []> var_9 = const()[name = tensor<string, []>("op_9"), val = tensor<int32, []>(96)];
            tensor<int32, []> var_10 = const()[name = tensor<string, []>("op_10"), val = tensor<int32, []>(88)];
            tensor<int32, []> var_11 = const()[name = tensor<string, []>("op_11"), val = tensor<int32, []>(72)];
            tensor<int32, []> var_12 = const()[name = tensor<string, []>("op_12"), val = tensor<int32, []>(16)];
            tensor<int32, []> var_16 = const()[name = tensor<string, []>("op_16"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_37 = const()[name = tensor<string, []>("op_37"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_39 = const()[name = tensor<string, []>("op_39"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_1_pad_type_0 = const()[name = tensor<string, []>("input_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_1_pad_0 = const()[name = tensor<string, []>("input_1_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<string, []> input_to_fp16_dtype_0 = const()[name = tensor<string, []>("input_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [16, 3, 3, 3]> input_3_weight_0_to_fp16 = const()[name = tensor<string, []>("input_3_weight_0_to_fp16"), val = tensor<fp16, [16, 3, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [16]> input_3_bias_0_to_fp16 = const()[name = tensor<string, []>("input_3_bias_0_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1024)))];
            tensor<fp16, [1, 3, 224, 224]> cast_2 = cast(dtype = input_to_fp16_dtype_0, x = input__biased__)[name = tensor<string, []>("cast_2")];
            tensor<fp16, [1, 16, 112, 112]> input_3_cast_fp16 = conv(bias = input_3_bias_0_to_fp16, dilations = var_39, groups = var_16, pad = input_1_pad_0, pad_type = input_1_pad_type_0, strides = var_37, weight = input_3_weight_0_to_fp16, x = cast_2)[name = tensor<string, []>("input_3_cast_fp16")];
            tensor<fp16, []> thresholded_relu_0_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_0_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 16, 112, 112]> thresholded_relu_0_cast_fp16 = thresholded_relu(alpha = thresholded_relu_0_alpha_0_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("thresholded_relu_0_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_0_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_0_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_0_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_0_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 16, 112, 112]> sigmoid_hard_0_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_0_alpha_0_to_fp16, beta = sigmoid_hard_0_beta_0_to_fp16, x = thresholded_relu_0_cast_fp16)[name = tensor<string, []>("sigmoid_hard_0_cast_fp16")];
            tensor<fp16, [1, 16, 112, 112]> input_5_cast_fp16 = mul(x = thresholded_relu_0_cast_fp16, y = sigmoid_hard_0_cast_fp16)[name = tensor<string, []>("input_5_cast_fp16")];
            tensor<int32, [2]> var_55 = const()[name = tensor<string, []>("op_55"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_57 = const()[name = tensor<string, []>("op_57"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_7_pad_type_0 = const()[name = tensor<string, []>("input_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_7_pad_0 = const()[name = tensor<string, []>("input_7_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [16, 1, 3, 3]> input_9_weight_0_to_fp16 = const()[name = tensor<string, []>("input_9_weight_0_to_fp16"), val = tensor<fp16, [16, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1152)))];
            tensor<fp16, [16]> input_9_bias_0_to_fp16 = const()[name = tensor<string, []>("input_9_bias_0_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1536)))];
            tensor<fp16, [1, 16, 56, 56]> input_9_cast_fp16 = conv(bias = input_9_bias_0_to_fp16, dilations = var_57, groups = var_12, pad = input_7_pad_0, pad_type = input_7_pad_type_0, strides = var_55, weight = input_9_weight_0_to_fp16, x = input_5_cast_fp16)[name = tensor<string, []>("input_9_cast_fp16")];
            tensor<fp16, [1, 16, 56, 56]> input_11_cast_fp16 = relu(x = input_9_cast_fp16)[name = tensor<string, []>("input_11_cast_fp16")];
            tensor<int32, [2]> input_13_axes_0 = const()[name = tensor<string, []>("input_13_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> input_13_keep_dims_0 = const()[name = tensor<string, []>("input_13_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 16, 1, 1]> input_13_cast_fp16 = reduce_mean(axes = input_13_axes_0, keep_dims = input_13_keep_dims_0, x = input_11_cast_fp16)[name = tensor<string, []>("input_13_cast_fp16")];
            tensor<int32, [2]> var_72 = const()[name = tensor<string, []>("op_72"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_74 = const()[name = tensor<string, []>("op_74"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_15_pad_type_0 = const()[name = tensor<string, []>("input_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_15_pad_0 = const()[name = tensor<string, []>("input_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [8, 16, 1, 1]> features_1_block_1_fc1_weight_to_fp16 = const()[name = tensor<string, []>("features_1_block_1_fc1_weight_to_fp16"), val = tensor<fp16, [8, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1664)))];
            tensor<fp16, [8]> features_1_block_1_fc1_bias_to_fp16 = const()[name = tensor<string, []>("features_1_block_1_fc1_bias_to_fp16"), val = tensor<fp16, [8]>([-0x1p-24, -0x1p-24, -0x1.57p-13, -0x1p-24, -0x1p-24, 0x1p-24, -0x1p-24, 0x1p-24])];
            tensor<fp16, [1, 8, 1, 1]> input_15_cast_fp16 = conv(bias = features_1_block_1_fc1_bias_to_fp16, dilations = var_74, groups = var_16, pad = input_15_pad_0, pad_type = input_15_pad_type_0, strides = var_72, weight = features_1_block_1_fc1_weight_to_fp16, x = input_13_cast_fp16)[name = tensor<string, []>("input_15_cast_fp16")];
            tensor<fp16, [1, 8, 1, 1]> input_17_cast_fp16 = relu(x = input_15_cast_fp16)[name = tensor<string, []>("input_17_cast_fp16")];
            tensor<int32, [2]> var_80 = const()[name = tensor<string, []>("op_80"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_82 = const()[name = tensor<string, []>("op_82"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_19_pad_type_0 = const()[name = tensor<string, []>("input_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_19_pad_0 = const()[name = tensor<string, []>("input_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [16, 8, 1, 1]> features_1_block_1_fc2_weight_to_fp16 = const()[name = tensor<string, []>("features_1_block_1_fc2_weight_to_fp16"), val = tensor<fp16, [16, 8, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1984)))];
            tensor<fp16, [16]> features_1_block_1_fc2_bias_to_fp16 = const()[name = tensor<string, []>("features_1_block_1_fc2_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2304)))];
            tensor<fp16, [1, 16, 1, 1]> input_19_cast_fp16 = conv(bias = features_1_block_1_fc2_bias_to_fp16, dilations = var_82, groups = var_16, pad = input_19_pad_0, pad_type = input_19_pad_type_0, strides = var_80, weight = features_1_block_1_fc2_weight_to_fp16, x = input_17_cast_fp16)[name = tensor<string, []>("input_19_cast_fp16")];
            tensor<fp16, []> scale_1_alpha_0_to_fp16 = const()[name = tensor<string, []>("scale_1_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> scale_1_beta_0_to_fp16 = const()[name = tensor<string, []>("scale_1_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 16, 1, 1]> scale_1_cast_fp16 = sigmoid_hard(alpha = scale_1_alpha_0_to_fp16, beta = scale_1_beta_0_to_fp16, x = input_19_cast_fp16)[name = tensor<string, []>("scale_1_cast_fp16")];
            tensor<fp16, [1, 16, 56, 56]> input_21_cast_fp16 = mul(x = scale_1_cast_fp16, y = input_11_cast_fp16)[name = tensor<string, []>("input_21_cast_fp16")];
            tensor<int32, [2]> var_90 = const()[name = tensor<string, []>("op_90"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_92 = const()[name = tensor<string, []>("op_92"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_23_pad_type_0 = const()[name = tensor<string, []>("input_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_23_pad_0 = const()[name = tensor<string, []>("input_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [16, 16, 1, 1]> input_25_weight_0_to_fp16 = const()[name = tensor<string, []>("input_25_weight_0_to_fp16"), val = tensor<fp16, [16, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2432)))];
            tensor<fp16, [16]> input_25_bias_0_to_fp16 = const()[name = tensor<string, []>("input_25_bias_0_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3008)))];
            tensor<fp16, [1, 16, 56, 56]> input_25_cast_fp16 = conv(bias = input_25_bias_0_to_fp16, dilations = var_92, groups = var_16, pad = input_23_pad_0, pad_type = input_23_pad_type_0, strides = var_90, weight = input_25_weight_0_to_fp16, x = input_21_cast_fp16)[name = tensor<string, []>("input_25_cast_fp16")];
            tensor<int32, [2]> var_107 = const()[name = tensor<string, []>("op_107"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_109 = const()[name = tensor<string, []>("op_109"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_27_pad_type_0 = const()[name = tensor<string, []>("input_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_27_pad_0 = const()[name = tensor<string, []>("input_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [72, 16, 1, 1]> input_29_weight_0_to_fp16 = const()[name = tensor<string, []>("input_29_weight_0_to_fp16"), val = tensor<fp16, [72, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3136)))];
            tensor<fp16, [72]> input_29_bias_0_to_fp16 = const()[name = tensor<string, []>("input_29_bias_0_to_fp16"), val = tensor<fp16, [72]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5504)))];
            tensor<fp16, [1, 72, 56, 56]> input_29_cast_fp16 = conv(bias = input_29_bias_0_to_fp16, dilations = var_109, groups = var_16, pad = input_27_pad_0, pad_type = input_27_pad_type_0, strides = var_107, weight = input_29_weight_0_to_fp16, x = input_25_cast_fp16)[name = tensor<string, []>("input_29_cast_fp16")];
            tensor<fp16, [1, 72, 56, 56]> input_31_cast_fp16 = relu(x = input_29_cast_fp16)[name = tensor<string, []>("input_31_cast_fp16")];
            tensor<int32, [2]> var_121 = const()[name = tensor<string, []>("op_121"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_123 = const()[name = tensor<string, []>("op_123"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_33_pad_type_0 = const()[name = tensor<string, []>("input_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_33_pad_0 = const()[name = tensor<string, []>("input_33_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [72, 1, 3, 3]> input_35_weight_0_to_fp16 = const()[name = tensor<string, []>("input_35_weight_0_to_fp16"), val = tensor<fp16, [72, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5760)))];
            tensor<fp16, [72]> input_35_bias_0_to_fp16 = const()[name = tensor<string, []>("input_35_bias_0_to_fp16"), val = tensor<fp16, [72]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7168)))];
            tensor<fp16, [1, 72, 28, 28]> input_35_cast_fp16 = conv(bias = input_35_bias_0_to_fp16, dilations = var_123, groups = var_11, pad = input_33_pad_0, pad_type = input_33_pad_type_0, strides = var_121, weight = input_35_weight_0_to_fp16, x = input_31_cast_fp16)[name = tensor<string, []>("input_35_cast_fp16")];
            tensor<fp16, [1, 72, 28, 28]> input_37_cast_fp16 = relu(x = input_35_cast_fp16)[name = tensor<string, []>("input_37_cast_fp16")];
            tensor<int32, [2]> var_135 = const()[name = tensor<string, []>("op_135"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_137 = const()[name = tensor<string, []>("op_137"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_39_pad_type_0 = const()[name = tensor<string, []>("input_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_39_pad_0 = const()[name = tensor<string, []>("input_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [24, 72, 1, 1]> input_41_weight_0_to_fp16 = const()[name = tensor<string, []>("input_41_weight_0_to_fp16"), val = tensor<fp16, [24, 72, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7424)))];
            tensor<fp16, [24]> input_41_bias_0_to_fp16 = const()[name = tensor<string, []>("input_41_bias_0_to_fp16"), val = tensor<fp16, [24]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10944)))];
            tensor<fp16, [1, 24, 28, 28]> input_41_cast_fp16 = conv(bias = input_41_bias_0_to_fp16, dilations = var_137, groups = var_16, pad = input_39_pad_0, pad_type = input_39_pad_type_0, strides = var_135, weight = input_41_weight_0_to_fp16, x = input_37_cast_fp16)[name = tensor<string, []>("input_41_cast_fp16")];
            tensor<int32, [2]> var_152 = const()[name = tensor<string, []>("op_152"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_154 = const()[name = tensor<string, []>("op_154"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_43_pad_type_0 = const()[name = tensor<string, []>("input_43_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_43_pad_0 = const()[name = tensor<string, []>("input_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [88, 24, 1, 1]> input_45_weight_0_to_fp16 = const()[name = tensor<string, []>("input_45_weight_0_to_fp16"), val = tensor<fp16, [88, 24, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11072)))];
            tensor<fp16, [88]> input_45_bias_0_to_fp16 = const()[name = tensor<string, []>("input_45_bias_0_to_fp16"), val = tensor<fp16, [88]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15360)))];
            tensor<fp16, [1, 88, 28, 28]> input_45_cast_fp16 = conv(bias = input_45_bias_0_to_fp16, dilations = var_154, groups = var_16, pad = input_43_pad_0, pad_type = input_43_pad_type_0, strides = var_152, weight = input_45_weight_0_to_fp16, x = input_41_cast_fp16)[name = tensor<string, []>("input_45_cast_fp16")];
            tensor<fp16, [1, 88, 28, 28]> input_47_cast_fp16 = relu(x = input_45_cast_fp16)[name = tensor<string, []>("input_47_cast_fp16")];
            tensor<int32, [2]> var_166 = const()[name = tensor<string, []>("op_166"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_168 = const()[name = tensor<string, []>("op_168"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_49_pad_type_0 = const()[name = tensor<string, []>("input_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_49_pad_0 = const()[name = tensor<string, []>("input_49_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [88, 1, 3, 3]> input_51_weight_0_to_fp16 = const()[name = tensor<string, []>("input_51_weight_0_to_fp16"), val = tensor<fp16, [88, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15616)))];
            tensor<fp16, [88]> input_51_bias_0_to_fp16 = const()[name = tensor<string, []>("input_51_bias_0_to_fp16"), val = tensor<fp16, [88]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17280)))];
            tensor<fp16, [1, 88, 28, 28]> input_51_cast_fp16 = conv(bias = input_51_bias_0_to_fp16, dilations = var_168, groups = var_10, pad = input_49_pad_0, pad_type = input_49_pad_type_0, strides = var_166, weight = input_51_weight_0_to_fp16, x = input_47_cast_fp16)[name = tensor<string, []>("input_51_cast_fp16")];
            tensor<fp16, [1, 88, 28, 28]> input_53_cast_fp16 = relu(x = input_51_cast_fp16)[name = tensor<string, []>("input_53_cast_fp16")];
            tensor<int32, [2]> var_180 = const()[name = tensor<string, []>("op_180"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_182 = const()[name = tensor<string, []>("op_182"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_55_pad_type_0 = const()[name = tensor<string, []>("input_55_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_55_pad_0 = const()[name = tensor<string, []>("input_55_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [24, 88, 1, 1]> result_1_weight_0_to_fp16 = const()[name = tensor<string, []>("result_1_weight_0_to_fp16"), val = tensor<fp16, [24, 88, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17536)))];
            tensor<fp16, [24]> result_1_bias_0_to_fp16 = const()[name = tensor<string, []>("result_1_bias_0_to_fp16"), val = tensor<fp16, [24]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21824)))];
            tensor<fp16, [1, 24, 28, 28]> result_1_cast_fp16 = conv(bias = result_1_bias_0_to_fp16, dilations = var_182, groups = var_16, pad = input_55_pad_0, pad_type = input_55_pad_type_0, strides = var_180, weight = result_1_weight_0_to_fp16, x = input_53_cast_fp16)[name = tensor<string, []>("result_1_cast_fp16")];
            tensor<fp16, [1, 24, 28, 28]> input_57_cast_fp16 = add(x = result_1_cast_fp16, y = input_41_cast_fp16)[name = tensor<string, []>("input_57_cast_fp16")];
            tensor<int32, [2]> var_199 = const()[name = tensor<string, []>("op_199"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_201 = const()[name = tensor<string, []>("op_201"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_59_pad_type_0 = const()[name = tensor<string, []>("input_59_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_59_pad_0 = const()[name = tensor<string, []>("input_59_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [96, 24, 1, 1]> input_61_weight_0_to_fp16 = const()[name = tensor<string, []>("input_61_weight_0_to_fp16"), val = tensor<fp16, [96, 24, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21952)))];
            tensor<fp16, [96]> input_61_bias_0_to_fp16 = const()[name = tensor<string, []>("input_61_bias_0_to_fp16"), val = tensor<fp16, [96]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26624)))];
            tensor<fp16, [1, 96, 28, 28]> input_61_cast_fp16 = conv(bias = input_61_bias_0_to_fp16, dilations = var_201, groups = var_16, pad = input_59_pad_0, pad_type = input_59_pad_type_0, strides = var_199, weight = input_61_weight_0_to_fp16, x = input_57_cast_fp16)[name = tensor<string, []>("input_61_cast_fp16")];
            tensor<fp16, []> thresholded_relu_1_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_1_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 96, 28, 28]> thresholded_relu_1_cast_fp16 = thresholded_relu(alpha = thresholded_relu_1_alpha_0_to_fp16, x = input_61_cast_fp16)[name = tensor<string, []>("thresholded_relu_1_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_1_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_1_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_1_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_1_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 96, 28, 28]> sigmoid_hard_1_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_1_alpha_0_to_fp16, beta = sigmoid_hard_1_beta_0_to_fp16, x = thresholded_relu_1_cast_fp16)[name = tensor<string, []>("sigmoid_hard_1_cast_fp16")];
            tensor<fp16, [1, 96, 28, 28]> input_63_cast_fp16 = mul(x = thresholded_relu_1_cast_fp16, y = sigmoid_hard_1_cast_fp16)[name = tensor<string, []>("input_63_cast_fp16")];
            tensor<int32, [2]> var_213 = const()[name = tensor<string, []>("op_213"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_215 = const()[name = tensor<string, []>("op_215"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_65_pad_type_0 = const()[name = tensor<string, []>("input_65_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_65_pad_0 = const()[name = tensor<string, []>("input_65_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [96, 1, 5, 5]> input_67_weight_0_to_fp16 = const()[name = tensor<string, []>("input_67_weight_0_to_fp16"), val = tensor<fp16, [96, 1, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26880)))];
            tensor<fp16, [96]> input_67_bias_0_to_fp16 = const()[name = tensor<string, []>("input_67_bias_0_to_fp16"), val = tensor<fp16, [96]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31744)))];
            tensor<fp16, [1, 96, 14, 14]> input_67_cast_fp16 = conv(bias = input_67_bias_0_to_fp16, dilations = var_215, groups = var_9, pad = input_65_pad_0, pad_type = input_65_pad_type_0, strides = var_213, weight = input_67_weight_0_to_fp16, x = input_63_cast_fp16)[name = tensor<string, []>("input_67_cast_fp16")];
            tensor<fp16, []> thresholded_relu_2_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_2_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 96, 14, 14]> thresholded_relu_2_cast_fp16 = thresholded_relu(alpha = thresholded_relu_2_alpha_0_to_fp16, x = input_67_cast_fp16)[name = tensor<string, []>("thresholded_relu_2_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_2_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_2_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_2_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_2_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 96, 14, 14]> sigmoid_hard_2_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_2_alpha_0_to_fp16, beta = sigmoid_hard_2_beta_0_to_fp16, x = thresholded_relu_2_cast_fp16)[name = tensor<string, []>("sigmoid_hard_2_cast_fp16")];
            tensor<fp16, [1, 96, 14, 14]> input_69_cast_fp16 = mul(x = thresholded_relu_2_cast_fp16, y = sigmoid_hard_2_cast_fp16)[name = tensor<string, []>("input_69_cast_fp16")];
            tensor<int32, [2]> input_71_axes_0 = const()[name = tensor<string, []>("input_71_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> input_71_keep_dims_0 = const()[name = tensor<string, []>("input_71_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 96, 1, 1]> input_71_cast_fp16 = reduce_mean(axes = input_71_axes_0, keep_dims = input_71_keep_dims_0, x = input_69_cast_fp16)[name = tensor<string, []>("input_71_cast_fp16")];
            tensor<int32, [2]> var_230 = const()[name = tensor<string, []>("op_230"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_232 = const()[name = tensor<string, []>("op_232"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_73_pad_type_0 = const()[name = tensor<string, []>("input_73_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_73_pad_0 = const()[name = tensor<string, []>("input_73_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [24, 96, 1, 1]> features_4_block_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("features_4_block_2_fc1_weight_to_fp16"), val = tensor<fp16, [24, 96, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(32000)))];
            tensor<fp16, [24]> features_4_block_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("features_4_block_2_fc1_bias_to_fp16"), val = tensor<fp16, [24]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36672)))];
            tensor<fp16, [1, 24, 1, 1]> input_73_cast_fp16 = conv(bias = features_4_block_2_fc1_bias_to_fp16, dilations = var_232, groups = var_16, pad = input_73_pad_0, pad_type = input_73_pad_type_0, strides = var_230, weight = features_4_block_2_fc1_weight_to_fp16, x = input_71_cast_fp16)[name = tensor<string, []>("input_73_cast_fp16")];
            tensor<fp16, [1, 24, 1, 1]> input_75_cast_fp16 = relu(x = input_73_cast_fp16)[name = tensor<string, []>("input_75_cast_fp16")];
            tensor<int32, [2]> var_238 = const()[name = tensor<string, []>("op_238"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_240 = const()[name = tensor<string, []>("op_240"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_77_pad_type_0 = const()[name = tensor<string, []>("input_77_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_77_pad_0 = const()[name = tensor<string, []>("input_77_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [96, 24, 1, 1]> features_4_block_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("features_4_block_2_fc2_weight_to_fp16"), val = tensor<fp16, [96, 24, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36800)))];
            tensor<fp16, [96]> features_4_block_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("features_4_block_2_fc2_bias_to_fp16"), val = tensor<fp16, [96]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41472)))];
            tensor<fp16, [1, 96, 1, 1]> input_77_cast_fp16 = conv(bias = features_4_block_2_fc2_bias_to_fp16, dilations = var_240, groups = var_16, pad = input_77_pad_0, pad_type = input_77_pad_type_0, strides = var_238, weight = features_4_block_2_fc2_weight_to_fp16, x = input_75_cast_fp16)[name = tensor<string, []>("input_77_cast_fp16")];
            tensor<fp16, []> scale_3_alpha_0_to_fp16 = const()[name = tensor<string, []>("scale_3_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> scale_3_beta_0_to_fp16 = const()[name = tensor<string, []>("scale_3_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 96, 1, 1]> scale_3_cast_fp16 = sigmoid_hard(alpha = scale_3_alpha_0_to_fp16, beta = scale_3_beta_0_to_fp16, x = input_77_cast_fp16)[name = tensor<string, []>("scale_3_cast_fp16")];
            tensor<fp16, [1, 96, 14, 14]> input_79_cast_fp16 = mul(x = scale_3_cast_fp16, y = input_69_cast_fp16)[name = tensor<string, []>("input_79_cast_fp16")];
            tensor<int32, [2]> var_248 = const()[name = tensor<string, []>("op_248"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_250 = const()[name = tensor<string, []>("op_250"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_81_pad_type_0 = const()[name = tensor<string, []>("input_81_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_81_pad_0 = const()[name = tensor<string, []>("input_81_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [40, 96, 1, 1]> input_83_weight_0_to_fp16 = const()[name = tensor<string, []>("input_83_weight_0_to_fp16"), val = tensor<fp16, [40, 96, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41728)))];
            tensor<fp16, [40]> input_83_bias_0_to_fp16 = const()[name = tensor<string, []>("input_83_bias_0_to_fp16"), val = tensor<fp16, [40]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(49472)))];
            tensor<fp16, [1, 40, 14, 14]> input_83_cast_fp16 = conv(bias = input_83_bias_0_to_fp16, dilations = var_250, groups = var_16, pad = input_81_pad_0, pad_type = input_81_pad_type_0, strides = var_248, weight = input_83_weight_0_to_fp16, x = input_79_cast_fp16)[name = tensor<string, []>("input_83_cast_fp16")];
            tensor<int32, [2]> var_266 = const()[name = tensor<string, []>("op_266"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_268 = const()[name = tensor<string, []>("op_268"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_85_pad_type_0 = const()[name = tensor<string, []>("input_85_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_85_pad_0 = const()[name = tensor<string, []>("input_85_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [240, 40, 1, 1]> input_87_weight_0_to_fp16 = const()[name = tensor<string, []>("input_87_weight_0_to_fp16"), val = tensor<fp16, [240, 40, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(49664)))];
            tensor<fp16, [240]> input_87_bias_0_to_fp16 = const()[name = tensor<string, []>("input_87_bias_0_to_fp16"), val = tensor<fp16, [240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68928)))];
            tensor<fp16, [1, 240, 14, 14]> input_87_cast_fp16 = conv(bias = input_87_bias_0_to_fp16, dilations = var_268, groups = var_16, pad = input_85_pad_0, pad_type = input_85_pad_type_0, strides = var_266, weight = input_87_weight_0_to_fp16, x = input_83_cast_fp16)[name = tensor<string, []>("input_87_cast_fp16")];
            tensor<fp16, []> thresholded_relu_3_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_3_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 240, 14, 14]> thresholded_relu_3_cast_fp16 = thresholded_relu(alpha = thresholded_relu_3_alpha_0_to_fp16, x = input_87_cast_fp16)[name = tensor<string, []>("thresholded_relu_3_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_3_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_3_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_3_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_3_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 240, 14, 14]> sigmoid_hard_3_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_3_alpha_0_to_fp16, beta = sigmoid_hard_3_beta_0_to_fp16, x = thresholded_relu_3_cast_fp16)[name = tensor<string, []>("sigmoid_hard_3_cast_fp16")];
            tensor<fp16, [1, 240, 14, 14]> input_89_cast_fp16 = mul(x = thresholded_relu_3_cast_fp16, y = sigmoid_hard_3_cast_fp16)[name = tensor<string, []>("input_89_cast_fp16")];
            tensor<int32, [2]> var_280 = const()[name = tensor<string, []>("op_280"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_282 = const()[name = tensor<string, []>("op_282"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_91_pad_type_0 = const()[name = tensor<string, []>("input_91_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_91_pad_0 = const()[name = tensor<string, []>("input_91_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [240, 1, 5, 5]> input_93_weight_0_to_fp16 = const()[name = tensor<string, []>("input_93_weight_0_to_fp16"), val = tensor<fp16, [240, 1, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(69504)))];
            tensor<fp16, [240]> input_93_bias_0_to_fp16 = const()[name = tensor<string, []>("input_93_bias_0_to_fp16"), val = tensor<fp16, [240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81600)))];
            tensor<fp16, [1, 240, 14, 14]> input_93_cast_fp16 = conv(bias = input_93_bias_0_to_fp16, dilations = var_282, groups = var_8, pad = input_91_pad_0, pad_type = input_91_pad_type_0, strides = var_280, weight = input_93_weight_0_to_fp16, x = input_89_cast_fp16)[name = tensor<string, []>("input_93_cast_fp16")];
            tensor<fp16, []> thresholded_relu_4_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_4_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 240, 14, 14]> thresholded_relu_4_cast_fp16 = thresholded_relu(alpha = thresholded_relu_4_alpha_0_to_fp16, x = input_93_cast_fp16)[name = tensor<string, []>("thresholded_relu_4_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_4_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_4_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_4_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_4_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 240, 14, 14]> sigmoid_hard_4_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_4_alpha_0_to_fp16, beta = sigmoid_hard_4_beta_0_to_fp16, x = thresholded_relu_4_cast_fp16)[name = tensor<string, []>("sigmoid_hard_4_cast_fp16")];
            tensor<fp16, [1, 240, 14, 14]> input_95_cast_fp16 = mul(x = thresholded_relu_4_cast_fp16, y = sigmoid_hard_4_cast_fp16)[name = tensor<string, []>("input_95_cast_fp16")];
            tensor<int32, [2]> input_97_axes_0 = const()[name = tensor<string, []>("input_97_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> input_97_keep_dims_0 = const()[name = tensor<string, []>("input_97_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 240, 1, 1]> input_97_cast_fp16 = reduce_mean(axes = input_97_axes_0, keep_dims = input_97_keep_dims_0, x = input_95_cast_fp16)[name = tensor<string, []>("input_97_cast_fp16")];
            tensor<int32, [2]> var_297 = const()[name = tensor<string, []>("op_297"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_299 = const()[name = tensor<string, []>("op_299"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_99_pad_type_0 = const()[name = tensor<string, []>("input_99_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_99_pad_0 = const()[name = tensor<string, []>("input_99_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 240, 1, 1]> features_5_block_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("features_5_block_2_fc1_weight_to_fp16"), val = tensor<fp16, [64, 240, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82176)))];
            tensor<fp16, [64]> features_5_block_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("features_5_block_2_fc1_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(112960)))];
            tensor<fp16, [1, 64, 1, 1]> input_99_cast_fp16 = conv(bias = features_5_block_2_fc1_bias_to_fp16, dilations = var_299, groups = var_16, pad = input_99_pad_0, pad_type = input_99_pad_type_0, strides = var_297, weight = features_5_block_2_fc1_weight_to_fp16, x = input_97_cast_fp16)[name = tensor<string, []>("input_99_cast_fp16")];
            tensor<fp16, [1, 64, 1, 1]> input_101_cast_fp16 = relu(x = input_99_cast_fp16)[name = tensor<string, []>("input_101_cast_fp16")];
            tensor<int32, [2]> var_305 = const()[name = tensor<string, []>("op_305"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_307 = const()[name = tensor<string, []>("op_307"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_103_pad_type_0 = const()[name = tensor<string, []>("input_103_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_103_pad_0 = const()[name = tensor<string, []>("input_103_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [240, 64, 1, 1]> features_5_block_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("features_5_block_2_fc2_weight_to_fp16"), val = tensor<fp16, [240, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(113152)))];
            tensor<fp16, [240]> features_5_block_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("features_5_block_2_fc2_bias_to_fp16"), val = tensor<fp16, [240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(143936)))];
            tensor<fp16, [1, 240, 1, 1]> input_103_cast_fp16 = conv(bias = features_5_block_2_fc2_bias_to_fp16, dilations = var_307, groups = var_16, pad = input_103_pad_0, pad_type = input_103_pad_type_0, strides = var_305, weight = features_5_block_2_fc2_weight_to_fp16, x = input_101_cast_fp16)[name = tensor<string, []>("input_103_cast_fp16")];
            tensor<fp16, []> scale_5_alpha_0_to_fp16 = const()[name = tensor<string, []>("scale_5_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> scale_5_beta_0_to_fp16 = const()[name = tensor<string, []>("scale_5_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 240, 1, 1]> scale_5_cast_fp16 = sigmoid_hard(alpha = scale_5_alpha_0_to_fp16, beta = scale_5_beta_0_to_fp16, x = input_103_cast_fp16)[name = tensor<string, []>("scale_5_cast_fp16")];
            tensor<fp16, [1, 240, 14, 14]> input_105_cast_fp16 = mul(x = scale_5_cast_fp16, y = input_95_cast_fp16)[name = tensor<string, []>("input_105_cast_fp16")];
            tensor<int32, [2]> var_315 = const()[name = tensor<string, []>("op_315"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_317 = const()[name = tensor<string, []>("op_317"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_107_pad_type_0 = const()[name = tensor<string, []>("input_107_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_107_pad_0 = const()[name = tensor<string, []>("input_107_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [40, 240, 1, 1]> result_3_weight_0_to_fp16 = const()[name = tensor<string, []>("result_3_weight_0_to_fp16"), val = tensor<fp16, [40, 240, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(144512)))];
            tensor<fp16, [40]> result_3_bias_0_to_fp16 = const()[name = tensor<string, []>("result_3_bias_0_to_fp16"), val = tensor<fp16, [40]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(163776)))];
            tensor<fp16, [1, 40, 14, 14]> result_3_cast_fp16 = conv(bias = result_3_bias_0_to_fp16, dilations = var_317, groups = var_16, pad = input_107_pad_0, pad_type = input_107_pad_type_0, strides = var_315, weight = result_3_weight_0_to_fp16, x = input_105_cast_fp16)[name = tensor<string, []>("result_3_cast_fp16")];
            tensor<fp16, [1, 40, 14, 14]> input_109_cast_fp16 = add(x = result_3_cast_fp16, y = input_83_cast_fp16)[name = tensor<string, []>("input_109_cast_fp16")];
            tensor<int32, [2]> var_334 = const()[name = tensor<string, []>("op_334"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_336 = const()[name = tensor<string, []>("op_336"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_111_pad_type_0 = const()[name = tensor<string, []>("input_111_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_111_pad_0 = const()[name = tensor<string, []>("input_111_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [240, 40, 1, 1]> input_113_weight_0_to_fp16 = const()[name = tensor<string, []>("input_113_weight_0_to_fp16"), val = tensor<fp16, [240, 40, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(163968)))];
            tensor<fp16, [240]> input_113_bias_0_to_fp16 = const()[name = tensor<string, []>("input_113_bias_0_to_fp16"), val = tensor<fp16, [240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(183232)))];
            tensor<fp16, [1, 240, 14, 14]> input_113_cast_fp16 = conv(bias = input_113_bias_0_to_fp16, dilations = var_336, groups = var_16, pad = input_111_pad_0, pad_type = input_111_pad_type_0, strides = var_334, weight = input_113_weight_0_to_fp16, x = input_109_cast_fp16)[name = tensor<string, []>("input_113_cast_fp16")];
            tensor<fp16, []> thresholded_relu_5_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_5_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 240, 14, 14]> thresholded_relu_5_cast_fp16 = thresholded_relu(alpha = thresholded_relu_5_alpha_0_to_fp16, x = input_113_cast_fp16)[name = tensor<string, []>("thresholded_relu_5_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_5_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_5_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_5_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_5_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 240, 14, 14]> sigmoid_hard_5_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_5_alpha_0_to_fp16, beta = sigmoid_hard_5_beta_0_to_fp16, x = thresholded_relu_5_cast_fp16)[name = tensor<string, []>("sigmoid_hard_5_cast_fp16")];
            tensor<fp16, [1, 240, 14, 14]> input_115_cast_fp16 = mul(x = thresholded_relu_5_cast_fp16, y = sigmoid_hard_5_cast_fp16)[name = tensor<string, []>("input_115_cast_fp16")];
            tensor<int32, [2]> var_348 = const()[name = tensor<string, []>("op_348"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_350 = const()[name = tensor<string, []>("op_350"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_117_pad_type_0 = const()[name = tensor<string, []>("input_117_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_117_pad_0 = const()[name = tensor<string, []>("input_117_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [240, 1, 5, 5]> input_119_weight_0_to_fp16 = const()[name = tensor<string, []>("input_119_weight_0_to_fp16"), val = tensor<fp16, [240, 1, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(183808)))];
            tensor<fp16, [240]> input_119_bias_0_to_fp16 = const()[name = tensor<string, []>("input_119_bias_0_to_fp16"), val = tensor<fp16, [240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(195904)))];
            tensor<fp16, [1, 240, 14, 14]> input_119_cast_fp16 = conv(bias = input_119_bias_0_to_fp16, dilations = var_350, groups = var_8, pad = input_117_pad_0, pad_type = input_117_pad_type_0, strides = var_348, weight = input_119_weight_0_to_fp16, x = input_115_cast_fp16)[name = tensor<string, []>("input_119_cast_fp16")];
            tensor<fp16, []> thresholded_relu_6_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_6_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 240, 14, 14]> thresholded_relu_6_cast_fp16 = thresholded_relu(alpha = thresholded_relu_6_alpha_0_to_fp16, x = input_119_cast_fp16)[name = tensor<string, []>("thresholded_relu_6_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_6_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_6_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_6_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_6_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 240, 14, 14]> sigmoid_hard_6_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_6_alpha_0_to_fp16, beta = sigmoid_hard_6_beta_0_to_fp16, x = thresholded_relu_6_cast_fp16)[name = tensor<string, []>("sigmoid_hard_6_cast_fp16")];
            tensor<fp16, [1, 240, 14, 14]> input_121_cast_fp16 = mul(x = thresholded_relu_6_cast_fp16, y = sigmoid_hard_6_cast_fp16)[name = tensor<string, []>("input_121_cast_fp16")];
            tensor<int32, [2]> input_123_axes_0 = const()[name = tensor<string, []>("input_123_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> input_123_keep_dims_0 = const()[name = tensor<string, []>("input_123_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 240, 1, 1]> input_123_cast_fp16 = reduce_mean(axes = input_123_axes_0, keep_dims = input_123_keep_dims_0, x = input_121_cast_fp16)[name = tensor<string, []>("input_123_cast_fp16")];
            tensor<int32, [2]> var_365 = const()[name = tensor<string, []>("op_365"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_367 = const()[name = tensor<string, []>("op_367"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_125_pad_type_0 = const()[name = tensor<string, []>("input_125_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_125_pad_0 = const()[name = tensor<string, []>("input_125_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 240, 1, 1]> features_6_block_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("features_6_block_2_fc1_weight_to_fp16"), val = tensor<fp16, [64, 240, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(196480)))];
            tensor<fp16, [64]> features_6_block_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("features_6_block_2_fc1_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(227264)))];
            tensor<fp16, [1, 64, 1, 1]> input_125_cast_fp16 = conv(bias = features_6_block_2_fc1_bias_to_fp16, dilations = var_367, groups = var_16, pad = input_125_pad_0, pad_type = input_125_pad_type_0, strides = var_365, weight = features_6_block_2_fc1_weight_to_fp16, x = input_123_cast_fp16)[name = tensor<string, []>("input_125_cast_fp16")];
            tensor<fp16, [1, 64, 1, 1]> input_127_cast_fp16 = relu(x = input_125_cast_fp16)[name = tensor<string, []>("input_127_cast_fp16")];
            tensor<int32, [2]> var_373 = const()[name = tensor<string, []>("op_373"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_375 = const()[name = tensor<string, []>("op_375"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_129_pad_type_0 = const()[name = tensor<string, []>("input_129_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_129_pad_0 = const()[name = tensor<string, []>("input_129_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [240, 64, 1, 1]> features_6_block_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("features_6_block_2_fc2_weight_to_fp16"), val = tensor<fp16, [240, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(227456)))];
            tensor<fp16, [240]> features_6_block_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("features_6_block_2_fc2_bias_to_fp16"), val = tensor<fp16, [240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(258240)))];
            tensor<fp16, [1, 240, 1, 1]> input_129_cast_fp16 = conv(bias = features_6_block_2_fc2_bias_to_fp16, dilations = var_375, groups = var_16, pad = input_129_pad_0, pad_type = input_129_pad_type_0, strides = var_373, weight = features_6_block_2_fc2_weight_to_fp16, x = input_127_cast_fp16)[name = tensor<string, []>("input_129_cast_fp16")];
            tensor<fp16, []> scale_7_alpha_0_to_fp16 = const()[name = tensor<string, []>("scale_7_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> scale_7_beta_0_to_fp16 = const()[name = tensor<string, []>("scale_7_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 240, 1, 1]> scale_7_cast_fp16 = sigmoid_hard(alpha = scale_7_alpha_0_to_fp16, beta = scale_7_beta_0_to_fp16, x = input_129_cast_fp16)[name = tensor<string, []>("scale_7_cast_fp16")];
            tensor<fp16, [1, 240, 14, 14]> input_131_cast_fp16 = mul(x = scale_7_cast_fp16, y = input_121_cast_fp16)[name = tensor<string, []>("input_131_cast_fp16")];
            tensor<int32, [2]> var_383 = const()[name = tensor<string, []>("op_383"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_385 = const()[name = tensor<string, []>("op_385"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_133_pad_type_0 = const()[name = tensor<string, []>("input_133_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_133_pad_0 = const()[name = tensor<string, []>("input_133_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [40, 240, 1, 1]> result_5_weight_0_to_fp16 = const()[name = tensor<string, []>("result_5_weight_0_to_fp16"), val = tensor<fp16, [40, 240, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(258816)))];
            tensor<fp16, [40]> result_5_bias_0_to_fp16 = const()[name = tensor<string, []>("result_5_bias_0_to_fp16"), val = tensor<fp16, [40]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(278080)))];
            tensor<fp16, [1, 40, 14, 14]> result_5_cast_fp16 = conv(bias = result_5_bias_0_to_fp16, dilations = var_385, groups = var_16, pad = input_133_pad_0, pad_type = input_133_pad_type_0, strides = var_383, weight = result_5_weight_0_to_fp16, x = input_131_cast_fp16)[name = tensor<string, []>("result_5_cast_fp16")];
            tensor<fp16, [1, 40, 14, 14]> input_135_cast_fp16 = add(x = result_5_cast_fp16, y = input_109_cast_fp16)[name = tensor<string, []>("input_135_cast_fp16")];
            tensor<int32, [2]> var_402 = const()[name = tensor<string, []>("op_402"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_404 = const()[name = tensor<string, []>("op_404"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_137_pad_type_0 = const()[name = tensor<string, []>("input_137_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_137_pad_0 = const()[name = tensor<string, []>("input_137_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [120, 40, 1, 1]> input_139_weight_0_to_fp16 = const()[name = tensor<string, []>("input_139_weight_0_to_fp16"), val = tensor<fp16, [120, 40, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(278272)))];
            tensor<fp16, [120]> input_139_bias_0_to_fp16 = const()[name = tensor<string, []>("input_139_bias_0_to_fp16"), val = tensor<fp16, [120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(287936)))];
            tensor<fp16, [1, 120, 14, 14]> input_139_cast_fp16 = conv(bias = input_139_bias_0_to_fp16, dilations = var_404, groups = var_16, pad = input_137_pad_0, pad_type = input_137_pad_type_0, strides = var_402, weight = input_139_weight_0_to_fp16, x = input_135_cast_fp16)[name = tensor<string, []>("input_139_cast_fp16")];
            tensor<fp16, []> thresholded_relu_7_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_7_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 120, 14, 14]> thresholded_relu_7_cast_fp16 = thresholded_relu(alpha = thresholded_relu_7_alpha_0_to_fp16, x = input_139_cast_fp16)[name = tensor<string, []>("thresholded_relu_7_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_7_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_7_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_7_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_7_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 120, 14, 14]> sigmoid_hard_7_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_7_alpha_0_to_fp16, beta = sigmoid_hard_7_beta_0_to_fp16, x = thresholded_relu_7_cast_fp16)[name = tensor<string, []>("sigmoid_hard_7_cast_fp16")];
            tensor<fp16, [1, 120, 14, 14]> input_141_cast_fp16 = mul(x = thresholded_relu_7_cast_fp16, y = sigmoid_hard_7_cast_fp16)[name = tensor<string, []>("input_141_cast_fp16")];
            tensor<int32, [2]> var_416 = const()[name = tensor<string, []>("op_416"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_418 = const()[name = tensor<string, []>("op_418"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_143_pad_type_0 = const()[name = tensor<string, []>("input_143_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_143_pad_0 = const()[name = tensor<string, []>("input_143_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [120, 1, 5, 5]> input_145_weight_0_to_fp16 = const()[name = tensor<string, []>("input_145_weight_0_to_fp16"), val = tensor<fp16, [120, 1, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(288256)))];
            tensor<fp16, [120]> input_145_bias_0_to_fp16 = const()[name = tensor<string, []>("input_145_bias_0_to_fp16"), val = tensor<fp16, [120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(294336)))];
            tensor<fp16, [1, 120, 14, 14]> input_145_cast_fp16 = conv(bias = input_145_bias_0_to_fp16, dilations = var_418, groups = var_7, pad = input_143_pad_0, pad_type = input_143_pad_type_0, strides = var_416, weight = input_145_weight_0_to_fp16, x = input_141_cast_fp16)[name = tensor<string, []>("input_145_cast_fp16")];
            tensor<fp16, []> thresholded_relu_8_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_8_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 120, 14, 14]> thresholded_relu_8_cast_fp16 = thresholded_relu(alpha = thresholded_relu_8_alpha_0_to_fp16, x = input_145_cast_fp16)[name = tensor<string, []>("thresholded_relu_8_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_8_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_8_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_8_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_8_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 120, 14, 14]> sigmoid_hard_8_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_8_alpha_0_to_fp16, beta = sigmoid_hard_8_beta_0_to_fp16, x = thresholded_relu_8_cast_fp16)[name = tensor<string, []>("sigmoid_hard_8_cast_fp16")];
            tensor<fp16, [1, 120, 14, 14]> input_147_cast_fp16 = mul(x = thresholded_relu_8_cast_fp16, y = sigmoid_hard_8_cast_fp16)[name = tensor<string, []>("input_147_cast_fp16")];
            tensor<int32, [2]> input_149_axes_0 = const()[name = tensor<string, []>("input_149_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> input_149_keep_dims_0 = const()[name = tensor<string, []>("input_149_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 120, 1, 1]> input_149_cast_fp16 = reduce_mean(axes = input_149_axes_0, keep_dims = input_149_keep_dims_0, x = input_147_cast_fp16)[name = tensor<string, []>("input_149_cast_fp16")];
            tensor<int32, [2]> var_433 = const()[name = tensor<string, []>("op_433"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_435 = const()[name = tensor<string, []>("op_435"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_151_pad_type_0 = const()[name = tensor<string, []>("input_151_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_151_pad_0 = const()[name = tensor<string, []>("input_151_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [32, 120, 1, 1]> features_7_block_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("features_7_block_2_fc1_weight_to_fp16"), val = tensor<fp16, [32, 120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(294656)))];
            tensor<fp16, [32]> features_7_block_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("features_7_block_2_fc1_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(302400)))];
            tensor<fp16, [1, 32, 1, 1]> input_151_cast_fp16 = conv(bias = features_7_block_2_fc1_bias_to_fp16, dilations = var_435, groups = var_16, pad = input_151_pad_0, pad_type = input_151_pad_type_0, strides = var_433, weight = features_7_block_2_fc1_weight_to_fp16, x = input_149_cast_fp16)[name = tensor<string, []>("input_151_cast_fp16")];
            tensor<fp16, [1, 32, 1, 1]> input_153_cast_fp16 = relu(x = input_151_cast_fp16)[name = tensor<string, []>("input_153_cast_fp16")];
            tensor<int32, [2]> var_441 = const()[name = tensor<string, []>("op_441"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_443 = const()[name = tensor<string, []>("op_443"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_155_pad_type_0 = const()[name = tensor<string, []>("input_155_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_155_pad_0 = const()[name = tensor<string, []>("input_155_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [120, 32, 1, 1]> features_7_block_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("features_7_block_2_fc2_weight_to_fp16"), val = tensor<fp16, [120, 32, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(302528)))];
            tensor<fp16, [120]> features_7_block_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("features_7_block_2_fc2_bias_to_fp16"), val = tensor<fp16, [120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(310272)))];
            tensor<fp16, [1, 120, 1, 1]> input_155_cast_fp16 = conv(bias = features_7_block_2_fc2_bias_to_fp16, dilations = var_443, groups = var_16, pad = input_155_pad_0, pad_type = input_155_pad_type_0, strides = var_441, weight = features_7_block_2_fc2_weight_to_fp16, x = input_153_cast_fp16)[name = tensor<string, []>("input_155_cast_fp16")];
            tensor<fp16, []> scale_9_alpha_0_to_fp16 = const()[name = tensor<string, []>("scale_9_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> scale_9_beta_0_to_fp16 = const()[name = tensor<string, []>("scale_9_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 120, 1, 1]> scale_9_cast_fp16 = sigmoid_hard(alpha = scale_9_alpha_0_to_fp16, beta = scale_9_beta_0_to_fp16, x = input_155_cast_fp16)[name = tensor<string, []>("scale_9_cast_fp16")];
            tensor<fp16, [1, 120, 14, 14]> input_157_cast_fp16 = mul(x = scale_9_cast_fp16, y = input_147_cast_fp16)[name = tensor<string, []>("input_157_cast_fp16")];
            tensor<int32, [2]> var_451 = const()[name = tensor<string, []>("op_451"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_453 = const()[name = tensor<string, []>("op_453"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_159_pad_type_0 = const()[name = tensor<string, []>("input_159_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_159_pad_0 = const()[name = tensor<string, []>("input_159_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [48, 120, 1, 1]> input_161_weight_0_to_fp16 = const()[name = tensor<string, []>("input_161_weight_0_to_fp16"), val = tensor<fp16, [48, 120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(310592)))];
            tensor<fp16, [48]> input_161_bias_0_to_fp16 = const()[name = tensor<string, []>("input_161_bias_0_to_fp16"), val = tensor<fp16, [48]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(322176)))];
            tensor<fp16, [1, 48, 14, 14]> input_161_cast_fp16 = conv(bias = input_161_bias_0_to_fp16, dilations = var_453, groups = var_16, pad = input_159_pad_0, pad_type = input_159_pad_type_0, strides = var_451, weight = input_161_weight_0_to_fp16, x = input_157_cast_fp16)[name = tensor<string, []>("input_161_cast_fp16")];
            tensor<int32, [2]> var_469 = const()[name = tensor<string, []>("op_469"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_471 = const()[name = tensor<string, []>("op_471"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_163_pad_type_0 = const()[name = tensor<string, []>("input_163_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_163_pad_0 = const()[name = tensor<string, []>("input_163_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [144, 48, 1, 1]> input_165_weight_0_to_fp16 = const()[name = tensor<string, []>("input_165_weight_0_to_fp16"), val = tensor<fp16, [144, 48, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(322368)))];
            tensor<fp16, [144]> input_165_bias_0_to_fp16 = const()[name = tensor<string, []>("input_165_bias_0_to_fp16"), val = tensor<fp16, [144]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(336256)))];
            tensor<fp16, [1, 144, 14, 14]> input_165_cast_fp16 = conv(bias = input_165_bias_0_to_fp16, dilations = var_471, groups = var_16, pad = input_163_pad_0, pad_type = input_163_pad_type_0, strides = var_469, weight = input_165_weight_0_to_fp16, x = input_161_cast_fp16)[name = tensor<string, []>("input_165_cast_fp16")];
            tensor<fp16, []> thresholded_relu_9_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_9_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 144, 14, 14]> thresholded_relu_9_cast_fp16 = thresholded_relu(alpha = thresholded_relu_9_alpha_0_to_fp16, x = input_165_cast_fp16)[name = tensor<string, []>("thresholded_relu_9_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_9_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_9_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_9_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_9_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 144, 14, 14]> sigmoid_hard_9_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_9_alpha_0_to_fp16, beta = sigmoid_hard_9_beta_0_to_fp16, x = thresholded_relu_9_cast_fp16)[name = tensor<string, []>("sigmoid_hard_9_cast_fp16")];
            tensor<fp16, [1, 144, 14, 14]> input_167_cast_fp16 = mul(x = thresholded_relu_9_cast_fp16, y = sigmoid_hard_9_cast_fp16)[name = tensor<string, []>("input_167_cast_fp16")];
            tensor<int32, [2]> var_483 = const()[name = tensor<string, []>("op_483"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_485 = const()[name = tensor<string, []>("op_485"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_169_pad_type_0 = const()[name = tensor<string, []>("input_169_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_169_pad_0 = const()[name = tensor<string, []>("input_169_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [144, 1, 5, 5]> input_171_weight_0_to_fp16 = const()[name = tensor<string, []>("input_171_weight_0_to_fp16"), val = tensor<fp16, [144, 1, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(336640)))];
            tensor<fp16, [144]> input_171_bias_0_to_fp16 = const()[name = tensor<string, []>("input_171_bias_0_to_fp16"), val = tensor<fp16, [144]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(343936)))];
            tensor<fp16, [1, 144, 14, 14]> input_171_cast_fp16 = conv(bias = input_171_bias_0_to_fp16, dilations = var_485, groups = var_6, pad = input_169_pad_0, pad_type = input_169_pad_type_0, strides = var_483, weight = input_171_weight_0_to_fp16, x = input_167_cast_fp16)[name = tensor<string, []>("input_171_cast_fp16")];
            tensor<fp16, []> thresholded_relu_10_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_10_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 144, 14, 14]> thresholded_relu_10_cast_fp16 = thresholded_relu(alpha = thresholded_relu_10_alpha_0_to_fp16, x = input_171_cast_fp16)[name = tensor<string, []>("thresholded_relu_10_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_10_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_10_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_10_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_10_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 144, 14, 14]> sigmoid_hard_10_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_10_alpha_0_to_fp16, beta = sigmoid_hard_10_beta_0_to_fp16, x = thresholded_relu_10_cast_fp16)[name = tensor<string, []>("sigmoid_hard_10_cast_fp16")];
            tensor<fp16, [1, 144, 14, 14]> input_173_cast_fp16 = mul(x = thresholded_relu_10_cast_fp16, y = sigmoid_hard_10_cast_fp16)[name = tensor<string, []>("input_173_cast_fp16")];
            tensor<int32, [2]> input_175_axes_0 = const()[name = tensor<string, []>("input_175_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> input_175_keep_dims_0 = const()[name = tensor<string, []>("input_175_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 144, 1, 1]> input_175_cast_fp16 = reduce_mean(axes = input_175_axes_0, keep_dims = input_175_keep_dims_0, x = input_173_cast_fp16)[name = tensor<string, []>("input_175_cast_fp16")];
            tensor<int32, [2]> var_500 = const()[name = tensor<string, []>("op_500"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_502 = const()[name = tensor<string, []>("op_502"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_177_pad_type_0 = const()[name = tensor<string, []>("input_177_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_177_pad_0 = const()[name = tensor<string, []>("input_177_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [40, 144, 1, 1]> features_8_block_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("features_8_block_2_fc1_weight_to_fp16"), val = tensor<fp16, [40, 144, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(344320)))];
            tensor<fp16, [40]> features_8_block_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("features_8_block_2_fc1_bias_to_fp16"), val = tensor<fp16, [40]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(355904)))];
            tensor<fp16, [1, 40, 1, 1]> input_177_cast_fp16 = conv(bias = features_8_block_2_fc1_bias_to_fp16, dilations = var_502, groups = var_16, pad = input_177_pad_0, pad_type = input_177_pad_type_0, strides = var_500, weight = features_8_block_2_fc1_weight_to_fp16, x = input_175_cast_fp16)[name = tensor<string, []>("input_177_cast_fp16")];
            tensor<fp16, [1, 40, 1, 1]> input_179_cast_fp16 = relu(x = input_177_cast_fp16)[name = tensor<string, []>("input_179_cast_fp16")];
            tensor<int32, [2]> var_508 = const()[name = tensor<string, []>("op_508"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_510 = const()[name = tensor<string, []>("op_510"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_181_pad_type_0 = const()[name = tensor<string, []>("input_181_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_181_pad_0 = const()[name = tensor<string, []>("input_181_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [144, 40, 1, 1]> features_8_block_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("features_8_block_2_fc2_weight_to_fp16"), val = tensor<fp16, [144, 40, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(356096)))];
            tensor<fp16, [144]> features_8_block_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("features_8_block_2_fc2_bias_to_fp16"), val = tensor<fp16, [144]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(367680)))];
            tensor<fp16, [1, 144, 1, 1]> input_181_cast_fp16 = conv(bias = features_8_block_2_fc2_bias_to_fp16, dilations = var_510, groups = var_16, pad = input_181_pad_0, pad_type = input_181_pad_type_0, strides = var_508, weight = features_8_block_2_fc2_weight_to_fp16, x = input_179_cast_fp16)[name = tensor<string, []>("input_181_cast_fp16")];
            tensor<fp16, []> scale_11_alpha_0_to_fp16 = const()[name = tensor<string, []>("scale_11_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> scale_11_beta_0_to_fp16 = const()[name = tensor<string, []>("scale_11_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 144, 1, 1]> scale_11_cast_fp16 = sigmoid_hard(alpha = scale_11_alpha_0_to_fp16, beta = scale_11_beta_0_to_fp16, x = input_181_cast_fp16)[name = tensor<string, []>("scale_11_cast_fp16")];
            tensor<fp16, [1, 144, 14, 14]> input_183_cast_fp16 = mul(x = scale_11_cast_fp16, y = input_173_cast_fp16)[name = tensor<string, []>("input_183_cast_fp16")];
            tensor<int32, [2]> var_518 = const()[name = tensor<string, []>("op_518"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_520 = const()[name = tensor<string, []>("op_520"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_185_pad_type_0 = const()[name = tensor<string, []>("input_185_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_185_pad_0 = const()[name = tensor<string, []>("input_185_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [48, 144, 1, 1]> result_7_weight_0_to_fp16 = const()[name = tensor<string, []>("result_7_weight_0_to_fp16"), val = tensor<fp16, [48, 144, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(368064)))];
            tensor<fp16, [48]> result_7_bias_0_to_fp16 = const()[name = tensor<string, []>("result_7_bias_0_to_fp16"), val = tensor<fp16, [48]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(381952)))];
            tensor<fp16, [1, 48, 14, 14]> result_7_cast_fp16 = conv(bias = result_7_bias_0_to_fp16, dilations = var_520, groups = var_16, pad = input_185_pad_0, pad_type = input_185_pad_type_0, strides = var_518, weight = result_7_weight_0_to_fp16, x = input_183_cast_fp16)[name = tensor<string, []>("result_7_cast_fp16")];
            tensor<fp16, [1, 48, 14, 14]> input_187_cast_fp16 = add(x = result_7_cast_fp16, y = input_161_cast_fp16)[name = tensor<string, []>("input_187_cast_fp16")];
            tensor<int32, [2]> var_537 = const()[name = tensor<string, []>("op_537"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_539 = const()[name = tensor<string, []>("op_539"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_189_pad_type_0 = const()[name = tensor<string, []>("input_189_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_189_pad_0 = const()[name = tensor<string, []>("input_189_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [288, 48, 1, 1]> input_191_weight_0_to_fp16 = const()[name = tensor<string, []>("input_191_weight_0_to_fp16"), val = tensor<fp16, [288, 48, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(382144)))];
            tensor<fp16, [288]> input_191_bias_0_to_fp16 = const()[name = tensor<string, []>("input_191_bias_0_to_fp16"), val = tensor<fp16, [288]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(409856)))];
            tensor<fp16, [1, 288, 14, 14]> input_191_cast_fp16 = conv(bias = input_191_bias_0_to_fp16, dilations = var_539, groups = var_16, pad = input_189_pad_0, pad_type = input_189_pad_type_0, strides = var_537, weight = input_191_weight_0_to_fp16, x = input_187_cast_fp16)[name = tensor<string, []>("input_191_cast_fp16")];
            tensor<fp16, []> thresholded_relu_11_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_11_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 288, 14, 14]> thresholded_relu_11_cast_fp16 = thresholded_relu(alpha = thresholded_relu_11_alpha_0_to_fp16, x = input_191_cast_fp16)[name = tensor<string, []>("thresholded_relu_11_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_11_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_11_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_11_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_11_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 288, 14, 14]> sigmoid_hard_11_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_11_alpha_0_to_fp16, beta = sigmoid_hard_11_beta_0_to_fp16, x = thresholded_relu_11_cast_fp16)[name = tensor<string, []>("sigmoid_hard_11_cast_fp16")];
            tensor<fp16, [1, 288, 14, 14]> input_193_cast_fp16 = mul(x = thresholded_relu_11_cast_fp16, y = sigmoid_hard_11_cast_fp16)[name = tensor<string, []>("input_193_cast_fp16")];
            tensor<int32, [2]> var_551 = const()[name = tensor<string, []>("op_551"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_553 = const()[name = tensor<string, []>("op_553"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_195_pad_type_0 = const()[name = tensor<string, []>("input_195_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_195_pad_0 = const()[name = tensor<string, []>("input_195_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [288, 1, 5, 5]> input_197_weight_0_to_fp16 = const()[name = tensor<string, []>("input_197_weight_0_to_fp16"), val = tensor<fp16, [288, 1, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(410496)))];
            tensor<fp16, [288]> input_197_bias_0_to_fp16 = const()[name = tensor<string, []>("input_197_bias_0_to_fp16"), val = tensor<fp16, [288]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(424960)))];
            tensor<fp16, [1, 288, 7, 7]> input_197_cast_fp16 = conv(bias = input_197_bias_0_to_fp16, dilations = var_553, groups = var_5, pad = input_195_pad_0, pad_type = input_195_pad_type_0, strides = var_551, weight = input_197_weight_0_to_fp16, x = input_193_cast_fp16)[name = tensor<string, []>("input_197_cast_fp16")];
            tensor<fp16, []> thresholded_relu_12_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_12_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 288, 7, 7]> thresholded_relu_12_cast_fp16 = thresholded_relu(alpha = thresholded_relu_12_alpha_0_to_fp16, x = input_197_cast_fp16)[name = tensor<string, []>("thresholded_relu_12_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_12_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_12_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_12_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_12_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 288, 7, 7]> sigmoid_hard_12_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_12_alpha_0_to_fp16, beta = sigmoid_hard_12_beta_0_to_fp16, x = thresholded_relu_12_cast_fp16)[name = tensor<string, []>("sigmoid_hard_12_cast_fp16")];
            tensor<fp16, [1, 288, 7, 7]> input_199_cast_fp16 = mul(x = thresholded_relu_12_cast_fp16, y = sigmoid_hard_12_cast_fp16)[name = tensor<string, []>("input_199_cast_fp16")];
            tensor<int32, [2]> input_201_axes_0 = const()[name = tensor<string, []>("input_201_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> input_201_keep_dims_0 = const()[name = tensor<string, []>("input_201_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 288, 1, 1]> input_201_cast_fp16 = reduce_mean(axes = input_201_axes_0, keep_dims = input_201_keep_dims_0, x = input_199_cast_fp16)[name = tensor<string, []>("input_201_cast_fp16")];
            tensor<int32, [2]> var_568 = const()[name = tensor<string, []>("op_568"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_570 = const()[name = tensor<string, []>("op_570"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_203_pad_type_0 = const()[name = tensor<string, []>("input_203_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_203_pad_0 = const()[name = tensor<string, []>("input_203_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [72, 288, 1, 1]> features_9_block_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("features_9_block_2_fc1_weight_to_fp16"), val = tensor<fp16, [72, 288, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(425600)))];
            tensor<fp16, [72]> features_9_block_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("features_9_block_2_fc1_bias_to_fp16"), val = tensor<fp16, [72]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(467136)))];
            tensor<fp16, [1, 72, 1, 1]> input_203_cast_fp16 = conv(bias = features_9_block_2_fc1_bias_to_fp16, dilations = var_570, groups = var_16, pad = input_203_pad_0, pad_type = input_203_pad_type_0, strides = var_568, weight = features_9_block_2_fc1_weight_to_fp16, x = input_201_cast_fp16)[name = tensor<string, []>("input_203_cast_fp16")];
            tensor<fp16, [1, 72, 1, 1]> input_205_cast_fp16 = relu(x = input_203_cast_fp16)[name = tensor<string, []>("input_205_cast_fp16")];
            tensor<int32, [2]> var_576 = const()[name = tensor<string, []>("op_576"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_578 = const()[name = tensor<string, []>("op_578"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_207_pad_type_0 = const()[name = tensor<string, []>("input_207_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_207_pad_0 = const()[name = tensor<string, []>("input_207_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [288, 72, 1, 1]> features_9_block_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("features_9_block_2_fc2_weight_to_fp16"), val = tensor<fp16, [288, 72, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(467392)))];
            tensor<fp16, [288]> features_9_block_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("features_9_block_2_fc2_bias_to_fp16"), val = tensor<fp16, [288]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(508928)))];
            tensor<fp16, [1, 288, 1, 1]> input_207_cast_fp16 = conv(bias = features_9_block_2_fc2_bias_to_fp16, dilations = var_578, groups = var_16, pad = input_207_pad_0, pad_type = input_207_pad_type_0, strides = var_576, weight = features_9_block_2_fc2_weight_to_fp16, x = input_205_cast_fp16)[name = tensor<string, []>("input_207_cast_fp16")];
            tensor<fp16, []> scale_13_alpha_0_to_fp16 = const()[name = tensor<string, []>("scale_13_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> scale_13_beta_0_to_fp16 = const()[name = tensor<string, []>("scale_13_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 288, 1, 1]> scale_13_cast_fp16 = sigmoid_hard(alpha = scale_13_alpha_0_to_fp16, beta = scale_13_beta_0_to_fp16, x = input_207_cast_fp16)[name = tensor<string, []>("scale_13_cast_fp16")];
            tensor<fp16, [1, 288, 7, 7]> input_209_cast_fp16 = mul(x = scale_13_cast_fp16, y = input_199_cast_fp16)[name = tensor<string, []>("input_209_cast_fp16")];
            tensor<int32, [2]> var_586 = const()[name = tensor<string, []>("op_586"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_588 = const()[name = tensor<string, []>("op_588"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_211_pad_type_0 = const()[name = tensor<string, []>("input_211_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_211_pad_0 = const()[name = tensor<string, []>("input_211_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [96, 288, 1, 1]> input_213_weight_0_to_fp16 = const()[name = tensor<string, []>("input_213_weight_0_to_fp16"), val = tensor<fp16, [96, 288, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(509568)))];
            tensor<fp16, [96]> input_213_bias_0_to_fp16 = const()[name = tensor<string, []>("input_213_bias_0_to_fp16"), val = tensor<fp16, [96]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(564928)))];
            tensor<fp16, [1, 96, 7, 7]> input_213_cast_fp16 = conv(bias = input_213_bias_0_to_fp16, dilations = var_588, groups = var_16, pad = input_211_pad_0, pad_type = input_211_pad_type_0, strides = var_586, weight = input_213_weight_0_to_fp16, x = input_209_cast_fp16)[name = tensor<string, []>("input_213_cast_fp16")];
            tensor<int32, [2]> var_604 = const()[name = tensor<string, []>("op_604"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_606 = const()[name = tensor<string, []>("op_606"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_215_pad_type_0 = const()[name = tensor<string, []>("input_215_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_215_pad_0 = const()[name = tensor<string, []>("input_215_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [576, 96, 1, 1]> input_217_weight_0_to_fp16 = const()[name = tensor<string, []>("input_217_weight_0_to_fp16"), val = tensor<fp16, [576, 96, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565184)))];
            tensor<fp16, [576]> input_217_bias_0_to_fp16 = const()[name = tensor<string, []>("input_217_bias_0_to_fp16"), val = tensor<fp16, [576]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(675840)))];
            tensor<fp16, [1, 576, 7, 7]> input_217_cast_fp16 = conv(bias = input_217_bias_0_to_fp16, dilations = var_606, groups = var_16, pad = input_215_pad_0, pad_type = input_215_pad_type_0, strides = var_604, weight = input_217_weight_0_to_fp16, x = input_213_cast_fp16)[name = tensor<string, []>("input_217_cast_fp16")];
            tensor<fp16, []> thresholded_relu_13_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_13_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 576, 7, 7]> thresholded_relu_13_cast_fp16 = thresholded_relu(alpha = thresholded_relu_13_alpha_0_to_fp16, x = input_217_cast_fp16)[name = tensor<string, []>("thresholded_relu_13_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_13_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_13_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_13_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_13_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 576, 7, 7]> sigmoid_hard_13_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_13_alpha_0_to_fp16, beta = sigmoid_hard_13_beta_0_to_fp16, x = thresholded_relu_13_cast_fp16)[name = tensor<string, []>("sigmoid_hard_13_cast_fp16")];
            tensor<fp16, [1, 576, 7, 7]> input_219_cast_fp16 = mul(x = thresholded_relu_13_cast_fp16, y = sigmoid_hard_13_cast_fp16)[name = tensor<string, []>("input_219_cast_fp16")];
            tensor<int32, [2]> var_618 = const()[name = tensor<string, []>("op_618"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_620 = const()[name = tensor<string, []>("op_620"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_221_pad_type_0 = const()[name = tensor<string, []>("input_221_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_221_pad_0 = const()[name = tensor<string, []>("input_221_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [576, 1, 5, 5]> input_223_weight_0_to_fp16 = const()[name = tensor<string, []>("input_223_weight_0_to_fp16"), val = tensor<fp16, [576, 1, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(677056)))];
            tensor<fp16, [576]> input_223_bias_0_to_fp16 = const()[name = tensor<string, []>("input_223_bias_0_to_fp16"), val = tensor<fp16, [576]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(705920)))];
            tensor<fp16, [1, 576, 7, 7]> input_223_cast_fp16 = conv(bias = input_223_bias_0_to_fp16, dilations = var_620, groups = var_4, pad = input_221_pad_0, pad_type = input_221_pad_type_0, strides = var_618, weight = input_223_weight_0_to_fp16, x = input_219_cast_fp16)[name = tensor<string, []>("input_223_cast_fp16")];
            tensor<fp16, []> thresholded_relu_14_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_14_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 576, 7, 7]> thresholded_relu_14_cast_fp16 = thresholded_relu(alpha = thresholded_relu_14_alpha_0_to_fp16, x = input_223_cast_fp16)[name = tensor<string, []>("thresholded_relu_14_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_14_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_14_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_14_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_14_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 576, 7, 7]> sigmoid_hard_14_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_14_alpha_0_to_fp16, beta = sigmoid_hard_14_beta_0_to_fp16, x = thresholded_relu_14_cast_fp16)[name = tensor<string, []>("sigmoid_hard_14_cast_fp16")];
            tensor<fp16, [1, 576, 7, 7]> input_225_cast_fp16 = mul(x = thresholded_relu_14_cast_fp16, y = sigmoid_hard_14_cast_fp16)[name = tensor<string, []>("input_225_cast_fp16")];
            tensor<int32, [2]> input_227_axes_0 = const()[name = tensor<string, []>("input_227_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> input_227_keep_dims_0 = const()[name = tensor<string, []>("input_227_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 576, 1, 1]> input_227_cast_fp16 = reduce_mean(axes = input_227_axes_0, keep_dims = input_227_keep_dims_0, x = input_225_cast_fp16)[name = tensor<string, []>("input_227_cast_fp16")];
            tensor<int32, [2]> var_635 = const()[name = tensor<string, []>("op_635"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_637 = const()[name = tensor<string, []>("op_637"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_229_pad_type_0 = const()[name = tensor<string, []>("input_229_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_229_pad_0 = const()[name = tensor<string, []>("input_229_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [144, 576, 1, 1]> features_10_block_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("features_10_block_2_fc1_weight_to_fp16"), val = tensor<fp16, [144, 576, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(707136)))];
            tensor<fp16, [144]> features_10_block_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("features_10_block_2_fc1_bias_to_fp16"), val = tensor<fp16, [144]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(873088)))];
            tensor<fp16, [1, 144, 1, 1]> input_229_cast_fp16 = conv(bias = features_10_block_2_fc1_bias_to_fp16, dilations = var_637, groups = var_16, pad = input_229_pad_0, pad_type = input_229_pad_type_0, strides = var_635, weight = features_10_block_2_fc1_weight_to_fp16, x = input_227_cast_fp16)[name = tensor<string, []>("input_229_cast_fp16")];
            tensor<fp16, [1, 144, 1, 1]> input_231_cast_fp16 = relu(x = input_229_cast_fp16)[name = tensor<string, []>("input_231_cast_fp16")];
            tensor<int32, [2]> var_643 = const()[name = tensor<string, []>("op_643"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_645 = const()[name = tensor<string, []>("op_645"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_233_pad_type_0 = const()[name = tensor<string, []>("input_233_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_233_pad_0 = const()[name = tensor<string, []>("input_233_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [576, 144, 1, 1]> features_10_block_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("features_10_block_2_fc2_weight_to_fp16"), val = tensor<fp16, [576, 144, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(873472)))];
            tensor<fp16, [576]> features_10_block_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("features_10_block_2_fc2_bias_to_fp16"), val = tensor<fp16, [576]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1039424)))];
            tensor<fp16, [1, 576, 1, 1]> input_233_cast_fp16 = conv(bias = features_10_block_2_fc2_bias_to_fp16, dilations = var_645, groups = var_16, pad = input_233_pad_0, pad_type = input_233_pad_type_0, strides = var_643, weight = features_10_block_2_fc2_weight_to_fp16, x = input_231_cast_fp16)[name = tensor<string, []>("input_233_cast_fp16")];
            tensor<fp16, []> scale_15_alpha_0_to_fp16 = const()[name = tensor<string, []>("scale_15_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> scale_15_beta_0_to_fp16 = const()[name = tensor<string, []>("scale_15_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 576, 1, 1]> scale_15_cast_fp16 = sigmoid_hard(alpha = scale_15_alpha_0_to_fp16, beta = scale_15_beta_0_to_fp16, x = input_233_cast_fp16)[name = tensor<string, []>("scale_15_cast_fp16")];
            tensor<fp16, [1, 576, 7, 7]> input_235_cast_fp16 = mul(x = scale_15_cast_fp16, y = input_225_cast_fp16)[name = tensor<string, []>("input_235_cast_fp16")];
            tensor<int32, [2]> var_653 = const()[name = tensor<string, []>("op_653"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_655 = const()[name = tensor<string, []>("op_655"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_237_pad_type_0 = const()[name = tensor<string, []>("input_237_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_237_pad_0 = const()[name = tensor<string, []>("input_237_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [96, 576, 1, 1]> result_9_weight_0_to_fp16 = const()[name = tensor<string, []>("result_9_weight_0_to_fp16"), val = tensor<fp16, [96, 576, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1040640)))];
            tensor<fp16, [96]> result_9_bias_0_to_fp16 = const()[name = tensor<string, []>("result_9_bias_0_to_fp16"), val = tensor<fp16, [96]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1151296)))];
            tensor<fp16, [1, 96, 7, 7]> result_9_cast_fp16 = conv(bias = result_9_bias_0_to_fp16, dilations = var_655, groups = var_16, pad = input_237_pad_0, pad_type = input_237_pad_type_0, strides = var_653, weight = result_9_weight_0_to_fp16, x = input_235_cast_fp16)[name = tensor<string, []>("result_9_cast_fp16")];
            tensor<fp16, [1, 96, 7, 7]> input_239_cast_fp16 = add(x = result_9_cast_fp16, y = input_213_cast_fp16)[name = tensor<string, []>("input_239_cast_fp16")];
            tensor<int32, [2]> var_672 = const()[name = tensor<string, []>("op_672"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_674 = const()[name = tensor<string, []>("op_674"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_241_pad_type_0 = const()[name = tensor<string, []>("input_241_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_241_pad_0 = const()[name = tensor<string, []>("input_241_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [576, 96, 1, 1]> input_243_weight_0_to_fp16 = const()[name = tensor<string, []>("input_243_weight_0_to_fp16"), val = tensor<fp16, [576, 96, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1151552)))];
            tensor<fp16, [576]> input_243_bias_0_to_fp16 = const()[name = tensor<string, []>("input_243_bias_0_to_fp16"), val = tensor<fp16, [576]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1262208)))];
            tensor<fp16, [1, 576, 7, 7]> input_243_cast_fp16 = conv(bias = input_243_bias_0_to_fp16, dilations = var_674, groups = var_16, pad = input_241_pad_0, pad_type = input_241_pad_type_0, strides = var_672, weight = input_243_weight_0_to_fp16, x = input_239_cast_fp16)[name = tensor<string, []>("input_243_cast_fp16")];
            tensor<fp16, []> thresholded_relu_15_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_15_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 576, 7, 7]> thresholded_relu_15_cast_fp16 = thresholded_relu(alpha = thresholded_relu_15_alpha_0_to_fp16, x = input_243_cast_fp16)[name = tensor<string, []>("thresholded_relu_15_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_15_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_15_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_15_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_15_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 576, 7, 7]> sigmoid_hard_15_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_15_alpha_0_to_fp16, beta = sigmoid_hard_15_beta_0_to_fp16, x = thresholded_relu_15_cast_fp16)[name = tensor<string, []>("sigmoid_hard_15_cast_fp16")];
            tensor<fp16, [1, 576, 7, 7]> input_245_cast_fp16 = mul(x = thresholded_relu_15_cast_fp16, y = sigmoid_hard_15_cast_fp16)[name = tensor<string, []>("input_245_cast_fp16")];
            tensor<int32, [2]> var_686 = const()[name = tensor<string, []>("op_686"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_688 = const()[name = tensor<string, []>("op_688"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_247_pad_type_0 = const()[name = tensor<string, []>("input_247_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_247_pad_0 = const()[name = tensor<string, []>("input_247_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<fp16, [576, 1, 5, 5]> input_249_weight_0_to_fp16 = const()[name = tensor<string, []>("input_249_weight_0_to_fp16"), val = tensor<fp16, [576, 1, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1263424)))];
            tensor<fp16, [576]> input_249_bias_0_to_fp16 = const()[name = tensor<string, []>("input_249_bias_0_to_fp16"), val = tensor<fp16, [576]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1292288)))];
            tensor<fp16, [1, 576, 7, 7]> input_249_cast_fp16 = conv(bias = input_249_bias_0_to_fp16, dilations = var_688, groups = var_4, pad = input_247_pad_0, pad_type = input_247_pad_type_0, strides = var_686, weight = input_249_weight_0_to_fp16, x = input_245_cast_fp16)[name = tensor<string, []>("input_249_cast_fp16")];
            tensor<fp16, []> thresholded_relu_16_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_16_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 576, 7, 7]> thresholded_relu_16_cast_fp16 = thresholded_relu(alpha = thresholded_relu_16_alpha_0_to_fp16, x = input_249_cast_fp16)[name = tensor<string, []>("thresholded_relu_16_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_16_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_16_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_16_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_16_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 576, 7, 7]> sigmoid_hard_16_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_16_alpha_0_to_fp16, beta = sigmoid_hard_16_beta_0_to_fp16, x = thresholded_relu_16_cast_fp16)[name = tensor<string, []>("sigmoid_hard_16_cast_fp16")];
            tensor<fp16, [1, 576, 7, 7]> input_251_cast_fp16 = mul(x = thresholded_relu_16_cast_fp16, y = sigmoid_hard_16_cast_fp16)[name = tensor<string, []>("input_251_cast_fp16")];
            tensor<int32, [2]> input_253_axes_0 = const()[name = tensor<string, []>("input_253_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> input_253_keep_dims_0 = const()[name = tensor<string, []>("input_253_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 576, 1, 1]> input_253_cast_fp16 = reduce_mean(axes = input_253_axes_0, keep_dims = input_253_keep_dims_0, x = input_251_cast_fp16)[name = tensor<string, []>("input_253_cast_fp16")];
            tensor<int32, [2]> var_703 = const()[name = tensor<string, []>("op_703"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_705 = const()[name = tensor<string, []>("op_705"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_255_pad_type_0 = const()[name = tensor<string, []>("input_255_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_255_pad_0 = const()[name = tensor<string, []>("input_255_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [144, 576, 1, 1]> features_11_block_2_fc1_weight_to_fp16 = const()[name = tensor<string, []>("features_11_block_2_fc1_weight_to_fp16"), val = tensor<fp16, [144, 576, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1293504)))];
            tensor<fp16, [144]> features_11_block_2_fc1_bias_to_fp16 = const()[name = tensor<string, []>("features_11_block_2_fc1_bias_to_fp16"), val = tensor<fp16, [144]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1459456)))];
            tensor<fp16, [1, 144, 1, 1]> input_255_cast_fp16 = conv(bias = features_11_block_2_fc1_bias_to_fp16, dilations = var_705, groups = var_16, pad = input_255_pad_0, pad_type = input_255_pad_type_0, strides = var_703, weight = features_11_block_2_fc1_weight_to_fp16, x = input_253_cast_fp16)[name = tensor<string, []>("input_255_cast_fp16")];
            tensor<fp16, [1, 144, 1, 1]> input_257_cast_fp16 = relu(x = input_255_cast_fp16)[name = tensor<string, []>("input_257_cast_fp16")];
            tensor<int32, [2]> var_711 = const()[name = tensor<string, []>("op_711"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_713 = const()[name = tensor<string, []>("op_713"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_259_pad_type_0 = const()[name = tensor<string, []>("input_259_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_259_pad_0 = const()[name = tensor<string, []>("input_259_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [576, 144, 1, 1]> features_11_block_2_fc2_weight_to_fp16 = const()[name = tensor<string, []>("features_11_block_2_fc2_weight_to_fp16"), val = tensor<fp16, [576, 144, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1459840)))];
            tensor<fp16, [576]> features_11_block_2_fc2_bias_to_fp16 = const()[name = tensor<string, []>("features_11_block_2_fc2_bias_to_fp16"), val = tensor<fp16, [576]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1625792)))];
            tensor<fp16, [1, 576, 1, 1]> input_259_cast_fp16 = conv(bias = features_11_block_2_fc2_bias_to_fp16, dilations = var_713, groups = var_16, pad = input_259_pad_0, pad_type = input_259_pad_type_0, strides = var_711, weight = features_11_block_2_fc2_weight_to_fp16, x = input_257_cast_fp16)[name = tensor<string, []>("input_259_cast_fp16")];
            tensor<fp16, []> scale_alpha_0_to_fp16 = const()[name = tensor<string, []>("scale_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> scale_beta_0_to_fp16 = const()[name = tensor<string, []>("scale_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 576, 1, 1]> scale_cast_fp16 = sigmoid_hard(alpha = scale_alpha_0_to_fp16, beta = scale_beta_0_to_fp16, x = input_259_cast_fp16)[name = tensor<string, []>("scale_cast_fp16")];
            tensor<fp16, [1, 576, 7, 7]> input_261_cast_fp16 = mul(x = scale_cast_fp16, y = input_251_cast_fp16)[name = tensor<string, []>("input_261_cast_fp16")];
            tensor<int32, [2]> var_721 = const()[name = tensor<string, []>("op_721"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_723 = const()[name = tensor<string, []>("op_723"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_263_pad_type_0 = const()[name = tensor<string, []>("input_263_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_263_pad_0 = const()[name = tensor<string, []>("input_263_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [96, 576, 1, 1]> result_weight_0_to_fp16 = const()[name = tensor<string, []>("result_weight_0_to_fp16"), val = tensor<fp16, [96, 576, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1627008)))];
            tensor<fp16, [96]> result_bias_0_to_fp16 = const()[name = tensor<string, []>("result_bias_0_to_fp16"), val = tensor<fp16, [96]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1737664)))];
            tensor<fp16, [1, 96, 7, 7]> result_cast_fp16 = conv(bias = result_bias_0_to_fp16, dilations = var_723, groups = var_16, pad = input_263_pad_0, pad_type = input_263_pad_type_0, strides = var_721, weight = result_weight_0_to_fp16, x = input_261_cast_fp16)[name = tensor<string, []>("result_cast_fp16")];
            tensor<fp16, [1, 96, 7, 7]> input_265_cast_fp16 = add(x = result_cast_fp16, y = input_239_cast_fp16)[name = tensor<string, []>("input_265_cast_fp16")];
            tensor<int32, [2]> var_735 = const()[name = tensor<string, []>("op_735"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_737 = const()[name = tensor<string, []>("op_737"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_267_pad_type_0 = const()[name = tensor<string, []>("input_267_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_267_pad_0 = const()[name = tensor<string, []>("input_267_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [576, 96, 1, 1]> input_269_weight_0_to_fp16 = const()[name = tensor<string, []>("input_269_weight_0_to_fp16"), val = tensor<fp16, [576, 96, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1737920)))];
            tensor<fp16, [576]> input_269_bias_0_to_fp16 = const()[name = tensor<string, []>("input_269_bias_0_to_fp16"), val = tensor<fp16, [576]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1848576)))];
            tensor<fp16, [1, 576, 7, 7]> input_269_cast_fp16 = conv(bias = input_269_bias_0_to_fp16, dilations = var_737, groups = var_16, pad = input_267_pad_0, pad_type = input_267_pad_type_0, strides = var_735, weight = input_269_weight_0_to_fp16, x = input_265_cast_fp16)[name = tensor<string, []>("input_269_cast_fp16")];
            tensor<fp16, []> thresholded_relu_17_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_17_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 576, 7, 7]> thresholded_relu_17_cast_fp16 = thresholded_relu(alpha = thresholded_relu_17_alpha_0_to_fp16, x = input_269_cast_fp16)[name = tensor<string, []>("thresholded_relu_17_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_17_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_17_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_17_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_17_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 576, 7, 7]> sigmoid_hard_17_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_17_alpha_0_to_fp16, beta = sigmoid_hard_17_beta_0_to_fp16, x = thresholded_relu_17_cast_fp16)[name = tensor<string, []>("sigmoid_hard_17_cast_fp16")];
            tensor<fp16, [1, 576, 7, 7]> input_271_cast_fp16 = mul(x = thresholded_relu_17_cast_fp16, y = sigmoid_hard_17_cast_fp16)[name = tensor<string, []>("input_271_cast_fp16")];
            tensor<int32, [2]> x_axes_0 = const()[name = tensor<string, []>("x_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> x_keep_dims_0 = const()[name = tensor<string, []>("x_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 576, 1, 1]> x_cast_fp16 = reduce_mean(axes = x_axes_0, keep_dims = x_keep_dims_0, x = input_271_cast_fp16)[name = tensor<string, []>("x_cast_fp16")];
            tensor<int32, [2]> concat_0 = const()[name = tensor<string, []>("concat_0"), val = tensor<int32, [2]>([1, 576])];
            tensor<fp16, [1, 576]> input_273_cast_fp16 = reshape(shape = concat_0, x = x_cast_fp16)[name = tensor<string, []>("input_273_cast_fp16")];
            tensor<fp16, [1024, 576]> classifier_0_weight_to_fp16 = const()[name = tensor<string, []>("classifier_0_weight_to_fp16"), val = tensor<fp16, [1024, 576]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1849792)))];
            tensor<fp16, [1024]> classifier_0_bias_to_fp16 = const()[name = tensor<string, []>("classifier_0_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3029504)))];
            tensor<fp16, [1, 1024]> linear_0_cast_fp16 = linear(bias = classifier_0_bias_to_fp16, weight = classifier_0_weight_to_fp16, x = input_273_cast_fp16)[name = tensor<string, []>("linear_0_cast_fp16")];
            tensor<fp16, []> thresholded_relu_18_alpha_0_to_fp16 = const()[name = tensor<string, []>("thresholded_relu_18_alpha_0_to_fp16"), val = tensor<fp16, []>(-0x1.8p+1)];
            tensor<fp16, [1, 1024]> thresholded_relu_18_cast_fp16 = thresholded_relu(alpha = thresholded_relu_18_alpha_0_to_fp16, x = linear_0_cast_fp16)[name = tensor<string, []>("thresholded_relu_18_cast_fp16")];
            tensor<fp16, []> sigmoid_hard_18_alpha_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_18_alpha_0_to_fp16"), val = tensor<fp16, []>(0x1.554p-3)];
            tensor<fp16, []> sigmoid_hard_18_beta_0_to_fp16 = const()[name = tensor<string, []>("sigmoid_hard_18_beta_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 1024]> sigmoid_hard_18_cast_fp16 = sigmoid_hard(alpha = sigmoid_hard_18_alpha_0_to_fp16, beta = sigmoid_hard_18_beta_0_to_fp16, x = thresholded_relu_18_cast_fp16)[name = tensor<string, []>("sigmoid_hard_18_cast_fp16")];
            tensor<fp16, [1, 1024]> input_277_cast_fp16 = mul(x = thresholded_relu_18_cast_fp16, y = sigmoid_hard_18_cast_fp16)[name = tensor<string, []>("input_277_cast_fp16")];
            tensor<fp16, [2, 1024]> classifier_3_weight_to_fp16 = const()[name = tensor<string, []>("classifier_3_weight_to_fp16"), val = tensor<fp16, [2, 1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3031616)))];
            tensor<fp16, [2]> classifier_3_bias_to_fp16 = const()[name = tensor<string, []>("classifier_3_bias_to_fp16"), val = tensor<fp16, [2]>([0x1.a7cp-7, -0x1.03p-6])];
            tensor<fp16, [1, 2]> linear_1_cast_fp16 = linear(bias = classifier_3_bias_to_fp16, weight = classifier_3_weight_to_fp16, x = input_277_cast_fp16)[name = tensor<string, []>("linear_1_cast_fp16")];
            tensor<string, []> linear_1_cast_fp16_to_fp32_dtype_0 = const()[name = tensor<string, []>("linear_1_cast_fp16_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [1, 2]> linear_1 = cast(dtype = linear_1_cast_fp16_to_fp32_dtype_0, x = linear_1_cast_fp16)[name = tensor<string, []>("cast_1")];
        } -> (linear_1);
}